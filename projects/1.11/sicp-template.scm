(import (scheme small)
	(scheme base)
        (scheme write)
	(srfi 1)
	(srfi 95)	
	(srfi 132)
	(srfi-197) 
#|
	
	(scheme case-lambda)
	(scheme char)
	(scheme complex)
	(scheme cxr)
	(scheme eval)
	(scheme file)
	(scheme inexact)
	(scheme lazy)
	(scheme load)
	(scheme process-context)
	(scheme r5rs)
	(scheme read)
	(scheme repl)
	(scheme time)
	(chibi generic)	
|#

	)
(define lst (list 3 5 6 7 0 4 6 0 2 3))
(sort '(3 5 6 7 0 4 6 2 3) >)
(reverse lst)
(display (filter zero? lst))
(number? 6)

(define (listwalk L)
  (newline)
  (if (eq? L '()) '() 
      (begin 
        (display (car L))
        (newline)
        (listwalk (cdr L)))))
(listwalk (list 3 4 5 7 8 0 1))

(define s (chain lst (filter positive? _)(sort _ <)(reverse _)))
;(define d (s '(3 5 6 7 0 4 6 2 3)))
(display s)
