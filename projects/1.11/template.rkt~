
 #lang r5rs
(#%require sicp/sorting-6)
(#%require rnrs/r5rs-6)
(#%require srfi/%3a1)
;(#%require "../lib/42.rkt")
;(#%require sicp/main)
;(#%require r5rs/init)

    

(define lst (list 3 5 6 7 0 4 6 0 2 3))
(list-sort > '(3 5 6 7 0 4 6 2 3))
(filter zero? lst)

;(numeric-range 3 4 1)
;(-> lst (reverse)(display))

;(define s (chain-lambda          
  ;         (filter zero?)))
;(s '(3 5 6 7 0 4 6 2 3))
(number? 6)

(define (listwalk L)
  (newline)
  (if (eq? L '()) '() 
      (begin 
        (display (car L))
        (newline)
        (listwalk (cdr L)))))
(listwalk (list 3 4 5 7 8 0 1))

